logging.level.root = INFO
# Database
db.driver = org.h2.Driver
db.url = jdbc:h2:~/db/mydb.h2/my-spring-boot;AUTO_SERVER=TRUE;MVCC=TRUE;LOCK_TIMEOUT=3600000;DB_CLOSE_DELAY=-1;ACCESS_MODE_DATA=rws;AUTO_RECONNECT=TRUE;CACHE_SIZE=10240;PAGE_SIZE=1024;
db.username = sa
db.password = sa


# Hibernate
hibernate.dialect = org.hibernate.dialect.H2Dialect
hibernate.show_sql = true
hibernate.hbm2ddl.auto = update
hibernate.format_sql = true
hibernate.mappingResources = /com/forsrc/pojo/User.hbm.xml
entitymanager.packagesToScan = com.forsrc.pojo
# entitymanager.persistenceXmlLocation: 


server.port = ${port:8075}
server.http.port = 9075
#server.context-path =
#server.contextPath =

server.compression.enabled = true


spring.datasource.url = ${db.url}
spring.datasource.username = ${db.username}
spring.datasource.password = ${db.password}
spring.datasource.driverClassName = ${db.driver}

# spring.jpa.database =
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto= update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

# keytool -genkeypair -keystore server.jks -dname "CN=forsrc, OU=forsrc, O=forsrc, L=forsrc, ST=forsrc, C=CN" -keypass apache -storepass apache -keyalg RSA -keysize 2048 -alias apache -validity 9999 -ext SAN=DNS:localhost,IP:127.0.0.1
# keytool -export -alias apache -keystore server.jks -storepass apache -file csii.cer
# keytool -import -alias apache -file csii.cer -keystore client.jks -storepass apache
# keytool -importcert -alias apache -file csii.cer -keystore truststore.keystore
server.ssl.key-store = classpath:server.jks
server.ssl.key-store-password = apache
server.ssl.key-password = apache
server.ssl.keyStoreType = JKS
server.ssl.keyAlias = apache
server.ssl.sslProtocol = TLS
server.ssl.enabled = true
server.tomcat.remote_ip_header = X-Forwarded-For
server.tomcat.protocol_header = X-Forwarded-Proto
security.require_ssl = true


# spring.mvc.view.prefix =
# spring.mvc.view.suffix = .html

# spring.thymeleaf.prefix = classpath:templates/
# spring.thymeleaf.suffix = .html
# spring.thymeleaf.mode = HTML5
# spring.thymeleaf.encoding = UTF-8
# spring.thymeleaf.content-type = text/html
# spring.thymeleaf.cache = false

logging.level.org.springframework.security = INFO
# security.basic.enabled = false


#
security.require-ssl = true

security.oauth2.client.client-id = forsrc
security.oauth2.client.client-secret = forsrc
security.oauth2.client.scope = read, write
security.oauth2.client.authorized-grant-types = authorization_code,refresh_token,password
security.oauth2.client.auto-approve-scopes = .*
security.oauth2.authorization.check-token-access = permitAll()
security.oauth2.authorization.token-key-access = permitAll()
#security.oauth2.resource.filter-order = 3
#security.oauth2.client.filter-order = 2
#security.oauth2.authorization.filter-order = -20

spring.jackson.date-format = com.fasterxml.jackson.databind.util.ISO8601DateFormat

# openssl genrsa -out private.pem 2048
# openssl rsa -in private.pem -outform PEM -pubout -out public.pem

jwt.verifier-key = -----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnRjJJ23SaAnNojdLdUj3\ntSGd58Fpm67lfwK0KnOHXc+Xkw9gwLkrTUgTlWsxNMiPvZywrUavZCSHJB2RSDzp\nB4dgizHX3LS4nDcsZIgsHj7WbK51Ig5VWLZa7ivpjhsXMfoydimuGKx6IK0QDQ1R\n3mr81/hGFy9peFoGkiLRGREHAOyNSwOximLUJcBQaKtJjBJr3bG0QlriR87wmF7l\n1jxj3+cVDr4WOVTHN2FuoPvOTe1Rv7u1m+LGHDgTFh+5I2oENe5ktjxvageB24KD\n2uDNVFNNkAyBhCb6y11LTV8hQ/50OyzlZi1CQSY5ALbg5I6XrBNPDhr1/EJ4cp57\nkQIDAQAB\n-----END PUBLIC KEY-----
jwt.signing-key = -----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAnRjJJ23SaAnNojdLdUj3tSGd58Fpm67lfwK0KnOHXc+Xkw9g\nwLkrTUgTlWsxNMiPvZywrUavZCSHJB2RSDzpB4dgizHX3LS4nDcsZIgsHj7WbK51\nIg5VWLZa7ivpjhsXMfoydimuGKx6IK0QDQ1R3mr81/hGFy9peFoGkiLRGREHAOyN\nSwOximLUJcBQaKtJjBJr3bG0QlriR87wmF7l1jxj3+cVDr4WOVTHN2FuoPvOTe1R\nv7u1m+LGHDgTFh+5I2oENe5ktjxvageB24KD2uDNVFNNkAyBhCb6y11LTV8hQ/50\nOyzlZi1CQSY5ALbg5I6XrBNPDhr1/EJ4cp57kQIDAQABAoIBAAS5gRs5d1F/sfqF\n9TQCzMhayXf13io7eVV3jFmWfeS5YJKgrMU/DGlXmJcu0R0IRyJpuvqLHK1DV/kj\nFoJ4qn16edHV3usZWFACbMhdPA5wz1wXZxhuG+z+FwAAvBZ1BB6RqsDZAg5l6Ypg\nChKKawLobtBD/D+oQmDHPFlayLUbPO2ViE/58gowdBi/b4kE6rC0MktV49fTWOtb\n5N8OwTzoItmcCV3qr0DP0Q6uB7p/uvtWXIS3tPDHd+6F+St96aAZUzpe1HR8XqEb\npVEQzaXw6HJGnxfmASoTN6xZxBuL30M2J/cOzi7s5BIunkhxX5XgM+sV3EBqKyJi\nt3erZm0CgYEAyfodueWIUDjn0v3Y7NSAecpnFzIDIX9fNHIg4dDtZehieNiJekJz\nIU8ec55FZg7vy2YjG8HBP0xwJnAbHpaUunDrfwLguUftpXmFxSFtnVHsggh8FDBN\nBVglJ/xPQWMMtfxeIEyk3vwx2Ui07ZJwAtdEcJ+tHLVFVNQoNgx94QcCgYEAxx2b\niQl9t0iVl+yboVgaOWaiwjkZ1W3BQ8IXfjmoyqfs6aISRoKDLJIDK2ZQUsuGjwps\nlXIx1jsiAPS67tpSFz5ijY0vVQR5w+celMKja3BVhsJJFXVtAEC9Jdw+8fnpG8fE\nSFgoAo1uOjP4Ltk3JdhTJCdQVR642p98FKE90KcCgYB41ZIDLTcoB2Np70RgK6HR\nOy4ByoHlAHbMwZq6fmwIk8aV1bYp1qdaPiNRuFZ8gGMlpK1MZdZfMDPISzluS1gf\nUn8RNX+MWWPro5BMJ3uUqvZ7tOfGjD8H+3v/OAuSaten6JvHZxMb9HU+MSlNGFa6\n3F6tolnG2wvnfCWycDa+8QKBgAatkYfZD6RUBOBhiR6yK779GDxXWex0j+TL36nW\nGTkixKlZTC+dNPULuJt+BPeh59NoUBf7Cnza4tsRWiukmtg4uWlx8MJzMfpGCBqJ\nJJ332IZ6gaT8mTlG8pEQf/Pxo8XQv16FxmG/iJDfKVW450aXqMIvp1wTebOrYaf3\neHFFAoGAdmuyrAJqCV64drHZ9TEbpORogMqaJy6dKbCbHbM7IWksk/Yg6eNs+0Q9\nU0k1ZkTQy04Q9DrsCwasxZpLpoED7AkmvW84XSq1vu1ME17nzTwuO02laPMr5vU0\nOzbhnUFLcHkKaH6osJCVYUhSk+P+U+vjS183UIb+8X02f19TUo4=\n-----END RSA PRIVATE KEY-----

spring.freemarker.allow-request-override = false
spring.freemarker.allow-session-override = false
spring.freemarker.cache = true
spring.freemarker.check-template-location = true
spring.freemarker.charset = UTF-8
spring.freemarker.content-type = text/html
spring.freemarker.expose-request-attributes = true
spring.freemarker.expose-session-attributes = true
spring.freemarker.expose-spring-macro-helpers = true
#spring.freemarker.prefix =
spring.freemarker.request-context-attribute = request
#spring.freemarker.settings.* =
spring.freemarker.suffix = .html
spring.freemarker.template-loader-path=classpath:/templates/
#spring.freemarker.view-names = # whitelist of view names that can be resolved

crossOrigin.origins = https://127.0.0.1:${server.port}