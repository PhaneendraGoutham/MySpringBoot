
# Database
db.driver = org.h2.Driver
db.url = jdbc:h2:~/db/mydb.h2/my-spring-boot;AUTO_SERVER=TRUE;MVCC=TRUE;LOCK_TIMEOUT=3600000;DB_CLOSE_DELAY=-1;ACCESS_MODE_DATA=rws;AUTO_RECONNECT=TRUE;CACHE_SIZE=10240;PAGE_SIZE=1024;
db.username = sa
db.password = sa
db.databasePlatform = h2
db.dialect = org.hibernate.dialect.H2Dialect


# Hibernate
#hibernate.dialect = org.hibernate.dialect.H2Dialect
#hibernate.show_sql = true
#hibernate.hbm2ddl.auto = update
#hibernate.format_sql = true
#hibernate.mappingResources = /com/forsrc/pojo/User.hbm.xml
#entitymanager.packagesToScan = com.forsrc.pojo
# entitymanager.persistenceXmlLocation: 


server.port = ${port:8078}
server.http.port = 9078

server.compression.enabled = true


spring.primary.datasource.url = ${db.url}
spring.primary.datasource.username = ${db.username}
spring.primary.datasource.password = ${db.password}
spring.primary.datasource.driverClassName = ${db.driver}
spring.primary.datasource.driver-class-name = ${db.driver}
spring.primary.datasource.platform = h2
spring.primary.datasource.schema = classpath:schema.sql
spring.primary.datasource.data = classpath:data.sql


spring.datasource.url = ${db.url}
spring.datasource.username = ${db.username}
spring.datasource.password = ${db.password}
spring.datasource.driverClassName = ${db.driver}

# spring.jpa.database =
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto= update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

# keytool -genkey -keyalg RSA -keysize 1024 -validity 365 -dname "CN=apache, OU=,O=apache, L=apache, ST=apache, C=apache" -alias apache -keypass apache -keystore server.jks -storepass apache
# keytool -export -alias apache -keystore server.jks -storepass apache -file csii.cer
# keytool -import -alias apache -file csii.cer -keystore client.jks -storepass apache
# keytool -importcert -alias apache -file csii.cer -keystore truststore.keystore
server.ssl.key-store = classpath:server.jks
server.ssl.key-store-password = apache
server.ssl.key-password = apache
server.ssl.keyStoreType = JKS
server.ssl.keyAlias = apache
server.ssl.enabled = true

solr.host = http://localhost:8984/solr

#spring.application.name=MySpringBoot
#spring.application.name=@project.description@
spring.boot.admin.url = https://localhost:8075
spring.jackson.serialization.indent_output = true
endpoints.health.sensitive = false
#server.contextPath=/admin


spring.batch.job.names = importUserJob
spring.batch.job.enabled = true
spring.batch.initializer.enabled=true


# ACTIVEMQ (ActiveMQProperties)
# tcp://localhost:61616
spring.activemq.broker-url = tcp://localhost:61616
spring.activemq.in-memory = true
spring.activemq.password = admin
spring.activemq.user = admin
spring.activemq.packages.trust-all = false
spring.activemq.packages.trusted = 
spring.activemq.pool.configuration.* = 
spring.activemq.pool.enabled = false
spring.activemq.pool.expiry-timeout = 0
spring.activemq.pool.idle-timeout = 30000
spring.activemq.pool.max-connections = 1
spring.jms.pub-sub-domain = false

amq.host = tcp://localhost:61616
amq.queueHost = tcp://localhost:61616
amq.topicHost = tcp://localhost:61616

# spring.mvc.view.prefix =
#spring.mvc.view.suffix = .html

#spring.thymeleaf.prefix = classpath:templates/
#spring.thymeleaf.suffix = .html
#spring.thymeleaf.mode = HTML5
#spring.thymeleaf.encoding = UTF-8
#spring.thymeleaf.content-type = text/html
#spring.thymeleaf.cache = true

logging.level.org.springframework.security = INFO
# security.basic.enabled = false


#
security.oauth2.client.client-id = forsrc
security.oauth2.client.client-secret = forsrc
security.oauth2.client.scope = read, write
security.oauth2.client.auto-approve-scopes = .*
#
security.oauth2.resource.token-info-uri = ${auth-server:https://localhost:8075}/oauth/check_token
security.oauth2.authorization.check-token-access = permitAll()
#
security.oauth2.client.access-token-uri = ${auth-server:https://localhost:8075}/oauth/token
security.oauth2.client.user-authorization-uri = ${auth-server:https://localhost:8075}/oauth/authorize


#spring.jackson.date-format =

spring.freemarker.allow-request-override = false
spring.freemarker.allow-session-override = false
spring.freemarker.cache = true
spring.freemarker.check-template-location = true
spring.freemarker.charset = UTF-8
spring.freemarker.content-type = text/html
spring.freemarker.expose-request-attributes = true
spring.freemarker.expose-session-attributes = true
spring.freemarker.expose-spring-macro-helpers = true
#spring.freemarker.prefix =
spring.freemarker.request-context-attribute = request
#spring.freemarker.settings.* =
spring.freemarker.suffix = .html
spring.freemarker.template-loader-path=classpath:/templates/
#spring.freemarker.view-names = # whitelist of view names that can be resolved

spring.http.multipart.enabled = true
spring.http.multipart.location = /temp
spring.http.multipart.max-file-size = 100MB
spring.http.multipart.max-request-size = 100MB


multipart.max-file-size = 100MB
multipart.max-request-size = 100MB
